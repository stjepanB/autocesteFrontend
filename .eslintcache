[{"D:\\Code\\ReactProjects\\autocesteFrontend\\src\\index.js":"1","D:\\Code\\ReactProjects\\autocesteFrontend\\src\\App.js":"2","D:\\Code\\ReactProjects\\autocesteFrontend\\src\\components\\Navbar.js":"3","D:\\Code\\ReactProjects\\autocesteFrontend\\src\\components\\SignInSide.js":"4","D:\\Code\\ReactProjects\\autocesteFrontend\\src\\components\\Home\\Home.js":"5","D:\\Code\\ReactProjects\\autocesteFrontend\\src\\components\\RegisterVehicle.js":"6","D:\\Code\\ReactProjects\\autocesteFrontend\\src\\context\\TokenContext.js":"7","D:\\Code\\ReactProjects\\autocesteFrontend\\src\\components\\AdminHome\\AdminHome.js":"8","D:\\Code\\ReactProjects\\autocesteFrontend\\src\\components\\Registration\\Registration.js":"9","D:\\Code\\ReactProjects\\autocesteFrontend\\src\\actions\\userActions.js":"10","D:\\Code\\ReactProjects\\autocesteFrontend\\src\\components\\Home\\Bills.js":"11","D:\\Code\\ReactProjects\\autocesteFrontend\\src\\components\\Home\\Vehicles.js":"12","D:\\Code\\ReactProjects\\autocesteFrontend\\src\\components\\Home\\SmallProfil.js":"13","D:\\Code\\ReactProjects\\autocesteFrontend\\src\\components\\Home\\Title.js":"14","D:\\Code\\ReactProjects\\autocesteFrontend\\src\\actions\\vehicleActions.js":"15","D:\\Code\\ReactProjects\\autocesteFrontend\\src\\components\\AdminHome\\Discount.js":"16","D:\\Code\\ReactProjects\\autocesteFrontend\\src\\components\\AdminHome\\Prices.js":"17","D:\\Code\\ReactProjects\\autocesteFrontend\\src\\components\\Registration\\PrivateRegistration.js":"18","D:\\Code\\ReactProjects\\autocesteFrontend\\src\\components\\Registration\\LegalRegistration.js":"19","D:\\Code\\ReactProjects\\autocesteFrontend\\src\\properties\\messagesForUser.js":"20","D:\\Code\\ReactProjects\\autocesteFrontend\\src\\validators\\vehicleValidators.js":"21","D:\\Code\\ReactProjects\\autocesteFrontend\\src\\validators\\registrationValidators.js":"22","D:\\Code\\ReactProjects\\autocesteFrontend\\src\\properties\\constants.js":"23","D:\\Code\\ReactProjects\\autocesteFrontend\\src\\actions\\billsActions.js":"24","D:\\Code\\ReactProjects\\autocesteFrontend\\src\\actions\\adminActions.js":"25","D:\\Code\\ReactProjects\\autocesteFrontend\\src\\components\\AdminHome\\DiscountLabels\\DiscountLabel.js":"26","D:\\Code\\ReactProjects\\autocesteFrontend\\src\\components\\AdminHome\\DiscountLabels\\VehicleLabel.js":"27","D:\\Code\\ReactProjects\\autocesteFrontend\\src\\components\\AdminHome\\DiscountLabels\\OrganizationLabel.js":"28","D:\\Code\\ReactProjects\\autocesteFrontend\\src\\components\\AdminHome\\DiscountLabels\\PrivateUserLabel.js":"29","D:\\Code\\ReactProjects\\autocesteFrontend\\src\\components\\AdminHome\\DiscountsList.js":"30","D:\\Code\\ReactProjects\\autocesteFrontend\\src\\components\\AdminHome\\Reports.js":"31","D:\\Code\\ReactProjects\\autocesteFrontend\\src\\actions\\reportsActions.js":"32"},{"size":178,"mtime":1606581743961,"results":"33","hashOfConfig":"34"},{"size":2142,"mtime":1610197986394,"results":"35","hashOfConfig":"34"},{"size":1048,"mtime":1609168306738,"results":"36","hashOfConfig":"34"},{"size":5239,"mtime":1609859882842,"results":"37","hashOfConfig":"34"},{"size":3390,"mtime":1609861032912,"results":"38","hashOfConfig":"34"},{"size":15208,"mtime":1610468687602,"results":"39","hashOfConfig":"34"},{"size":368,"mtime":1607179482896,"results":"40","hashOfConfig":"34"},{"size":5766,"mtime":1611759968200,"results":"41","hashOfConfig":"34"},{"size":1685,"mtime":1611761768843,"results":"42","hashOfConfig":"34"},{"size":1644,"mtime":1610636784263,"results":"43","hashOfConfig":"34"},{"size":2431,"mtime":1611756808539,"results":"44","hashOfConfig":"34"},{"size":3029,"mtime":1608744282119,"results":"45","hashOfConfig":"34"},{"size":1347,"mtime":1608744282113,"results":"46","hashOfConfig":"34"},{"size":356,"mtime":1608744282117,"results":"47","hashOfConfig":"34"},{"size":954,"mtime":1610558731369,"results":"48","hashOfConfig":"34"},{"size":12598,"mtime":1611761715905,"results":"49","hashOfConfig":"34"},{"size":22360,"mtime":1610730351348,"results":"50","hashOfConfig":"34"},{"size":9576,"mtime":1610730851409,"results":"51","hashOfConfig":"34"},{"size":6772,"mtime":1610730918263,"results":"52","hashOfConfig":"34"},{"size":4223,"mtime":1611759674902,"results":"53","hashOfConfig":"34"},{"size":977,"mtime":1608744282134,"results":"54","hashOfConfig":"34"},{"size":1140,"mtime":1606745401530,"results":"55","hashOfConfig":"34"},{"size":896,"mtime":1611760191932,"results":"56","hashOfConfig":"34"},{"size":368,"mtime":1611758352278,"results":"57","hashOfConfig":"34"},{"size":2066,"mtime":1610818777586,"results":"58","hashOfConfig":"34"},{"size":3232,"mtime":1610730357892,"results":"59","hashOfConfig":"34"},{"size":10790,"mtime":1610819867761,"results":"60","hashOfConfig":"34"},{"size":141,"mtime":1610543917849,"results":"61","hashOfConfig":"34"},{"size":141,"mtime":1610544030404,"results":"62","hashOfConfig":"34"},{"size":1925,"mtime":1611761698026,"results":"63","hashOfConfig":"34"},{"size":3387,"mtime":1612214662219,"results":"64","hashOfConfig":"34"},{"size":397,"mtime":1611761204679,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"77bxwz",{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"68"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"100","usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"D:\\Code\\ReactProjects\\autocesteFrontend\\src\\index.js",[],["133","134"],"D:\\Code\\ReactProjects\\autocesteFrontend\\src\\App.js",["135"],"import React, { useState, useEffect } from \"react\"\r\nimport Navbar from \"./components/Navbar\"\r\nimport SignInSide from \"./components/SignInSide\"\r\nimport Home from \"./components/Home/Home\"\r\nimport Registration from \"./components/Registration/Registration\"\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\"\r\nimport { TokenContextProvider } from \"./context/TokenContext\"\r\nimport RegisterVehicle from \"./components/RegisterVehicle\"\r\nimport AdminHome from \"./components/AdminHome/AdminHome\"\r\n\r\nexport default function App() {\r\n\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    const tmpIsAdmin = localStorage.getItem('admin');\r\n    console.log(token + \" \" + isLoggedIn)\r\n    console.log(isAdmin)\r\n    if (token) {\r\n      setIsLoggedIn(true)\r\n    }\r\n    if (tmpIsAdmin === \"true\") {\r\n      setIsAdmin(true)\r\n    }\r\n    if (tmpIsAdmin === \"false\") {\r\n      setIsAdmin(false)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <TokenContextProvider>\r\n        {\r\n          isLoggedIn ?\r\n            isAdmin ?\r\n              <BrowserRouter>\r\n                <Navbar />\r\n                <Route exact path=\"/\" component={AdminHome} />\r\n              </BrowserRouter>\r\n              :\r\n              <BrowserRouter>\r\n                <Navbar />\r\n                <Route exact path=\"/\" component={Home} />\r\n                <Route exact path=\"/vehicle\" component={RegisterVehicle} />\r\n              </BrowserRouter>\r\n            :\r\n            <BrowserRouter>\r\n              <Switch>\r\n                <Route path=\"/register\" exact component={Registration} />\r\n                <Route\r\n                  path='/'\r\n                  render={() => (\r\n                    <SignInSide\r\n                      setIsLoggedIn={(isLoggedIn) => setIsLoggedIn(isLoggedIn)}\r\n                      setIsAdmin={(isAdmin) => setIsAdmin(isAdmin)}\r\n                    />\r\n                  )}\r\n                />\r\n              </Switch>\r\n            </BrowserRouter>\r\n        }\r\n      </TokenContextProvider>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Code\\ReactProjects\\autocesteFrontend\\src\\components\\Navbar.js",[],"D:\\Code\\ReactProjects\\autocesteFrontend\\src\\components\\SignInSide.js",[],"D:\\Code\\ReactProjects\\autocesteFrontend\\src\\components\\Home\\Home.js",[],"D:\\Code\\ReactProjects\\autocesteFrontend\\src\\components\\RegisterVehicle.js",[],"D:\\Code\\ReactProjects\\autocesteFrontend\\src\\context\\TokenContext.js",[],"D:\\Code\\ReactProjects\\autocesteFrontend\\src\\components\\AdminHome\\AdminHome.js",[],"D:\\Code\\ReactProjects\\autocesteFrontend\\src\\components\\Registration\\Registration.js",[],"D:\\Code\\ReactProjects\\autocesteFrontend\\src\\actions\\userActions.js",[],"D:\\Code\\ReactProjects\\autocesteFrontend\\src\\components\\Home\\Bills.js",[],"D:\\Code\\ReactProjects\\autocesteFrontend\\src\\components\\Home\\Vehicles.js",[],"D:\\Code\\ReactProjects\\autocesteFrontend\\src\\components\\Home\\SmallProfil.js",[],"D:\\Code\\ReactProjects\\autocesteFrontend\\src\\components\\Home\\Title.js",[],"D:\\Code\\ReactProjects\\autocesteFrontend\\src\\actions\\vehicleActions.js",[],"D:\\Code\\ReactProjects\\autocesteFrontend\\src\\components\\AdminHome\\Discount.js",["136","137"],"import React, { useState, useRef, useEffect } from \"react\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { setDiscount } from \"../../actions/adminActions\"\r\nimport { Paper, Chip, TextField, CircularProgress, Fab, Button, Container, FormGroup, Typography, Slider, Grid, FormControlLabel, Checkbox } from \"@material-ui/core\";\r\nimport Title from \"../Home/Title\";\r\nimport message from \"../../properties/messagesForUser\";\r\nimport 'date-fns';\r\nimport compareAsc from 'date-fns/compareAsc'\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport { green } from '@material-ui/core/colors';\r\nimport clsx from 'clsx';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    chip: {\r\n        margin: theme.spacing(0.5),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(4),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    fabButtonRoot: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: 'relative',\r\n    },\r\n    buttonSuccess: {\r\n        backgroundColor: green[500],\r\n        '&:hover': {\r\n            backgroundColor: green[700],\r\n        },\r\n    },\r\n    fabProgress: {\r\n        color: green[500],\r\n        position: 'absolute',\r\n        top: -6,\r\n        left: -6,\r\n        zIndex: 1,\r\n    },\r\n    buttonProgress: {\r\n        color: green[500],\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    },\r\n}))\r\n\r\n\r\nexport default function Discount(props) {\r\n    const classes = useStyles();\r\n    const [chipData, setChipData] = useState([]);\r\n    const [index, setIndex] = useState(0)\r\n    const [marks] = useState([\r\n        {\r\n            value: 0,\r\n            label: '0%',\r\n        },\r\n\r\n        {\r\n            value: 5,\r\n            label: '5%',\r\n        },\r\n        {\r\n            value: 10,\r\n            label: '10%',\r\n        },\r\n        {\r\n            value: 13,\r\n            label: '13%',\r\n        },\r\n    ])\r\n    const [percentage, setPercentage] = useState(1);\r\n    const [discountName, setDiscountName] = useState(\"\");\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const [endDate, setEndDate] = useState(new Date());\r\n    const [success, setSuccess] = useState(false);\r\n    const [buttonLoading, setButtonLoading] = useState(false);\r\n    const buttonClassname = clsx({\r\n        [classes.buttonSuccess]: success,\r\n    });\r\n    const timer = useRef();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!buttonLoading) {\r\n            setSuccess(false);\r\n            setButtonLoading(true);\r\n            const labelNames = props.labels.filter(l => l.checked).map(e => e.name);\r\n            const dto = {\r\n                \"labels\": labelNames,\r\n                \"startDate\": startDate,\r\n                \"endDate\": endDate,\r\n                \"percentage\": percentage,\r\n                \"name\": discountName\r\n            }\r\n\r\n            const response = await setDiscount(dto)\r\n\r\n\r\n            if (response === \"OK\") {\r\n                setSuccess(true);\r\n                setButtonLoading(false);\r\n                setDiscountName(\"\");\r\n                window.location.reload(false);\r\n\r\n            }\r\n\r\n            timer.current = window.setTimeout(() => {\r\n                setSuccess(false);\r\n            }, 2000);\r\n        }\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        const tmpLabels = props.labels;\r\n        tmpLabels.filter(l => l.name === event.target.name).forEach(l => {\r\n            if (event.target.checked) {\r\n                var d = l\r\n                if (d.chipKey === undefined) {\r\n                    d.chipKey = index;\r\n                    setIndex(index + 1);\r\n                }\r\n                chipData.push(d)\r\n                setChipData([...chipData])\r\n            } else {\r\n                const tmpChip = chipData.filter(e => e.name !== l.name);\r\n                setChipData([...tmpChip]);\r\n\r\n            }\r\n\r\n            l.checked = event.target.checked\r\n        }\r\n        )\r\n        props.setLabels([...tmpLabels])\r\n    }\r\n\r\n    const handleName = (e) => {\r\n        setDiscountName(e.target.value)\r\n    }\r\n\r\n    const handleDelete = (chipToDelete) => () => {\r\n\r\n        setChipData((chips) => chips.filter((chip) => chip.key !== chipToDelete.key));\r\n        const tmpLabels = props.labels;\r\n        tmpLabels.filter(l => l.name === chipToDelete.name).forEach(l => l.checked = !l.checked);\r\n        props.setLabels([...tmpLabels]);\r\n    };\r\n\r\n    function valuetext(value) {\r\n        return `${value}%`;\r\n    }\r\n\r\n    const handleSliderChange = (event, newValue) => {\r\n        setPercentage(newValue);\r\n    };\r\n    const handleStartDate = (date) => {\r\n        //Compare the two dates and return 1 if the first date is after the second,\r\n        // -1 if the first date is before the second or 0 if dates are equal.\r\n        if (compareAsc(date, new Date) === -1) {\r\n            return\r\n        }\r\n        if (compareAsc(date, endDate) === 1) {\r\n            setEndDate(date);\r\n        }\r\n        setStartDate(date);\r\n    }\r\n\r\n    const handleEndDate = (date) => {\r\n        if (compareAsc(date, new Date) === -1) {\r\n            return\r\n        }\r\n\r\n        if (compareAsc(date, startDate) === -1) {\r\n            setStartDate(date);\r\n        }\r\n        setEndDate(date);\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => { }, [chipData]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Paper className={classes.paper} variant=\"outlined\">\r\n                <Title children={message.createDiscount} />\r\n                <Container maxWidth=\"lg\" className={classes.container}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                autoComplete=\"name\"\r\n                                name=\"vehicle-label\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"discount-label-name\"\r\n                                label=\"Naziv popusta\"\r\n                                onChange={handleName}\r\n                                autoFocus\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography id=\"available-marks\" gutterBottom>\r\n                                Oznake\r\n                            </Typography>\r\n                            <FormGroup row>\r\n                                {\r\n                                    props.labels.map(\r\n                                        e => <FormControlLabel\r\n                                            control={\r\n                                                <Checkbox\r\n                                                    checked={e.checked}\r\n                                                    onChange={handleChange}\r\n                                                    name={e.name}\r\n                                                    color=\"primary\"\r\n                                                />\r\n                                            }\r\n                                            label={e.name}\r\n                                            key={e.key}\r\n                                        />\r\n                                    )\r\n                                }\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography id=\"chips-choosen\" gutterBottom>\r\n                                {message.choosenMarks}\r\n                            </Typography>\r\n                            {\r\n                                chipData.map(\r\n                                    c => <Chip\r\n                                        label={c.name}\r\n                                        onDelete={handleDelete(c)}\r\n                                        className={classes.chip}\r\n                                        key={c.chipKey}\r\n                                    />\r\n                                )\r\n                            }\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography id=\"discrete-slider\" gutterBottom>\r\n                                {message.discountAmount}\r\n                            </Typography>\r\n                            <Slider\r\n                                defaultValue={1}\r\n                                getAriaValueText={valuetext}\r\n                                aria-labelledby=\"discrete-slider\"\r\n                                valueLabelDisplay=\"auto\"\r\n                                onChange={handleSliderChange}\r\n                                step={1}\r\n                                marks={marks}\r\n                                min={0}\r\n                                max={13}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <KeyboardDatePicker\r\n                                    margin=\"normal\"\r\n                                    id=\"discount-start-date-picker\"\r\n                                    format=\"dd/MM/yyyy\"\r\n                                    label={message.discountStartDate}\r\n                                    value={startDate}\r\n                                    onChange={handleStartDate}\r\n                                    KeyboardButtonProps={{\r\n                                        'aria-label': 'change date',\r\n                                    }}\r\n                                />\r\n                                <KeyboardDatePicker\r\n                                    margin=\"normal\"\r\n                                    id=\"discount-end-date-picker\"\r\n                                    format=\"dd/MM/yyyy\"\r\n                                    label={message.discountEndDate}\r\n                                    value={endDate}\r\n                                    onChange={handleEndDate}\r\n                                    KeyboardButtonProps={{\r\n                                        'aria-label': 'change date',\r\n                                    }}\r\n                                />\r\n                            </MuiPickersUtilsProvider>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <div className={classes.fabButtonRoot}>\r\n                                <div className={classes.wrapper}>\r\n                                    <Fab\r\n                                        aria-label=\"save\"\r\n                                        color=\"primary\"\r\n                                        className={buttonClassname}\r\n                                        onClick={handleSubmit}\r\n                                    >\r\n                                        {success ? <CheckIcon /> : <SaveIcon />}\r\n                                    </Fab>\r\n                                    {buttonLoading && <CircularProgress size={68} className={classes.fabProgress} />}\r\n                                </div>\r\n                                <div className={classes.wrapper}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={buttonClassname}\r\n                                        disabled={buttonLoading}\r\n                                        onClick={handleSubmit}\r\n                                    >\r\n                                        {message.save}\r\n                                    </Button>\r\n                                    {buttonLoading && <CircularProgress size={24} className={classes.buttonProgress} />}\r\n                                </div>\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}","D:\\Code\\ReactProjects\\autocesteFrontend\\src\\components\\AdminHome\\Prices.js",[],"D:\\Code\\ReactProjects\\autocesteFrontend\\src\\components\\Registration\\PrivateRegistration.js",[],"D:\\Code\\ReactProjects\\autocesteFrontend\\src\\components\\Registration\\LegalRegistration.js",[],"D:\\Code\\ReactProjects\\autocesteFrontend\\src\\properties\\messagesForUser.js",[],"D:\\Code\\ReactProjects\\autocesteFrontend\\src\\validators\\vehicleValidators.js",[],"D:\\Code\\ReactProjects\\autocesteFrontend\\src\\validators\\registrationValidators.js",[],"D:\\Code\\ReactProjects\\autocesteFrontend\\src\\properties\\constants.js",[],"D:\\Code\\ReactProjects\\autocesteFrontend\\src\\actions\\billsActions.js",[],"D:\\Code\\ReactProjects\\autocesteFrontend\\src\\actions\\adminActions.js",[],"D:\\Code\\ReactProjects\\autocesteFrontend\\src\\components\\AdminHome\\DiscountLabels\\DiscountLabel.js",[],"D:\\Code\\ReactProjects\\autocesteFrontend\\src\\components\\AdminHome\\DiscountLabels\\VehicleLabel.js",[],"D:\\Code\\ReactProjects\\autocesteFrontend\\src\\components\\AdminHome\\DiscountLabels\\OrganizationLabel.js",[],"D:\\Code\\ReactProjects\\autocesteFrontend\\src\\components\\AdminHome\\DiscountLabels\\PrivateUserLabel.js",[],"D:\\Code\\ReactProjects\\autocesteFrontend\\src\\components\\AdminHome\\DiscountsList.js",[],"D:\\Code\\ReactProjects\\autocesteFrontend\\src\\components\\AdminHome\\Reports.js",[],"D:\\Code\\ReactProjects\\autocesteFrontend\\src\\actions\\reportsActions.js",[],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":30,"column":6,"nodeType":"144","endLine":30,"endColumn":8,"suggestions":"145"},{"ruleId":"146","severity":1,"message":"147","line":174,"column":30,"nodeType":"148","messageId":"149","endLine":174,"endColumn":38,"fix":"150"},{"ruleId":"146","severity":1,"message":"147","line":184,"column":30,"nodeType":"148","messageId":"149","endLine":184,"endColumn":38,"fix":"151"},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isAdmin' and 'isLoggedIn'. Either include them or remove the dependency array.","ArrayExpression",["154"],"new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"155","text":"156"},{"range":"157","text":"156"},"no-global-assign","no-unsafe-negation",{"desc":"158","fix":"159"},[5320,5320],"()",[5568,5568],"Update the dependencies array to be: [isAdmin, isLoggedIn]",{"range":"160","text":"161"},[1028,1030],"[isAdmin, isLoggedIn]"]